{"ast":null,"code":"var _jsxFileName = \"/Users/patrickpicavet/Documents/Coding/fmgroupopdracht/reactTestAddressBook/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Address from \"./ui/components/Address/Address\";\nimport AddressBook from \"./ui/components/AddressBook/AddressBook\";\nimport Button from \"./ui/components/Button/Button\";\nimport InputText from \"./ui/components/InputText/InputText\";\nimport Radio from \"./ui/components/Radio/Radio\";\nimport Section from \"./ui/components/Section/Section\";\n// import transformAddress from \"./core/models/address\";\nimport useAddressBook from \"./ui/hooks/useAddressBook\";\nimport useFormFields from \"./ui/hooks/useFormFields\";\nimport \"./App.css\";\nimport Form from \"./ui/components/Form/Form\";\nimport FormRow from \"./ui/components/Form/FormRow\";\nimport ErrorMessage from \"./ui/components/Form/ErrorMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Replace all individual useState with the custom hook\n  const {\n    fields,\n    handleChange,\n    resetFields\n  } = useFormFields({\n    zipCode: \"\",\n    houseNumber: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    selectedAddress: \"\"\n  });\n  const [error, setError] = React.useState(undefined);\n  const [addresses, setAddresses] = React.useState([]);\n  const {\n    addAddress\n  } = useAddressBook();\n  const handleAddressSubmit = async e => {\n    console.log(\"handleAddressSubmit\", fields);\n    e.preventDefault();\n    try {\n      const response = await fetch(`http://api.postcodedata.nl/v1/postcode/?postcode=${fields.zipCode}&streetnumber=${fields.houseNumber}&ref=domeinnaam.nl&type=json`, {\n        method: \"GET\",\n        headers: {\n          \"X-API-Key\": \"b1a1a44d-9fb3-4a28-afc9-f7612b821370\",\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch address data\");\n      }\n\n      // Handle successful response here\n      console.log(data);\n      setAddresses(data);\n    } catch (error) {\n      setError(\"Failed to fetch address data\");\n      console.error(error);\n    }\n    /** TODO: Fetch addresses based on houseNumber and zipCode\n     * - Example URL of API: http://api.postcodedata.nl/v1/postcode/?postcode=1211EP&streetnumber=60&ref=domeinnaam.nl&type=json\n     * - Handle errors if they occur\n     * - Handle successful response by updating the `addresses` in the state using `setAddresses`\n     * - Make sure to add the houseNumber to each found address in the response using `transformAddress()` function\n     * - Bonus: Add a loading state in the UI while fetching addresses\n     */\n  };\n  const handlePersonSubmit = e => {\n    e.preventDefault();\n    if (!fields.selectedAddress || !addresses.length) {\n      setError(\"No address selected, try to select an address or find one if you haven't\");\n      return;\n    }\n    const foundAddress = addresses.find(address => address.id === fields.selectedAddress);\n    addAddress({\n      ...foundAddress,\n      firstName: fields.firstName,\n      lastName: fields.lastName\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(Section, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Create your own address book!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Enter an address by zipcode add personal info and done! \\uD83D\\uDC4F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleAddressSubmit,\n        legend: \"\\uD83C\\uDFE0 Find an address\",\n        submitText: \"Find\",\n        children: [/*#__PURE__*/_jsxDEV(FormRow, {\n          children: /*#__PURE__*/_jsxDEV(InputText, {\n            name: \"zipCode\",\n            onChange: handleChange,\n            placeholder: \"Zip Code\",\n            value: fields.zipCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormRow, {\n          children: /*#__PURE__*/_jsxDEV(InputText, {\n            name: \"houseNumber\",\n            onChange: handleChange,\n            value: fields.houseNumber,\n            placeholder: \"House number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), addresses.length > 0 && addresses.map(address => /*#__PURE__*/_jsxDEV(Radio, {\n        name: \"selectedAddress\",\n        id: address.id,\n        onChange: handleChange,\n        children: /*#__PURE__*/_jsxDEV(Address, {\n          address: address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this)\n      }, address.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this)), fields.selectedAddress && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handlePersonSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: \"\\u270F\\uFE0F Add personal info to address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: /*#__PURE__*/_jsxDEV(InputText, {\n              name: \"firstName\",\n              placeholder: \"First name\",\n              onChange: handleChange,\n              value: fields.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: /*#__PURE__*/_jsxDEV(InputText, {\n              name: \"lastName\",\n              placeholder: \"Last name\",\n              onChange: handleChange,\n              value: fields.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Add to addressbook\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        message: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      variant: \"dark\",\n      children: /*#__PURE__*/_jsxDEV(AddressBook, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"y/VYAkaOYye4PxaT6h+sw/yesBU=\", false, function () {\n  return [useFormFields, useAddressBook];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Address","AddressBook","Button","InputText","Radio","Section","useAddressBook","useFormFields","Form","FormRow","ErrorMessage","jsxDEV","_jsxDEV","App","_s","fields","handleChange","resetFields","zipCode","houseNumber","firstName","lastName","selectedAddress","error","setError","useState","undefined","addresses","setAddresses","addAddress","handleAddressSubmit","e","console","log","preventDefault","response","fetch","method","headers","data","json","ok","Error","handlePersonSubmit","length","foundAddress","find","address","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","legend","submitText","name","onChange","placeholder","value","map","className","type","message","variant","_c","$RefreshReg$"],"sources":["/Users/patrickpicavet/Documents/Coding/fmgroupopdracht/reactTestAddressBook/src/App.tsx"],"sourcesContent":["import React from \"react\";\n\nimport Address from \"./ui/components/Address/Address\";\nimport AddressBook from \"./ui/components/AddressBook/AddressBook\";\nimport Button from \"./ui/components/Button/Button\";\nimport InputText from \"./ui/components/InputText/InputText\";\nimport Radio from \"./ui/components/Radio/Radio\";\nimport Section from \"./ui/components/Section/Section\";\n// import transformAddress from \"./core/models/address\";\nimport useAddressBook from \"./ui/hooks/useAddressBook\";\nimport useFormFields from \"./ui/hooks/useFormFields\";\n\nimport \"./App.css\";\nimport Form from \"./ui/components/Form/Form\";\nimport FormRow from \"./ui/components/Form/FormRow\";\nimport ErrorMessage from \"./ui/components/Form/ErrorMessage\";\n\nfunction App() {\n  // Replace all individual useState with the custom hook\n  const { fields, handleChange, resetFields } = useFormFields({\n    zipCode: \"\",\n    houseNumber: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    selectedAddress: \"\",\n  });\n\n  const [error, setError] = React.useState<string | undefined>(undefined);\n  const [addresses, setAddresses] = React.useState<any[]>([]);\n\n  const { addAddress } = useAddressBook();\n\n  const handleAddressSubmit = async (e: any) => {\n    console.log(\"handleAddressSubmit\", fields);\n    e.preventDefault();\n    try {\n      const response = await fetch(\n        `http://api.postcodedata.nl/v1/postcode/?postcode=${fields.zipCode}&streetnumber=${fields.houseNumber}&ref=domeinnaam.nl&type=json`,\n        {\n          method: \"GET\",\n          headers: {\n            \"X-API-Key\": \"b1a1a44d-9fb3-4a28-afc9-f7612b821370\",\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch address data\");\n      }\n\n      // Handle successful response here\n      console.log(data);\n      setAddresses(data);\n    } catch (error) {\n      setError(\"Failed to fetch address data\");\n      console.error(error);\n    }\n    /** TODO: Fetch addresses based on houseNumber and zipCode\n     * - Example URL of API: http://api.postcodedata.nl/v1/postcode/?postcode=1211EP&streetnumber=60&ref=domeinnaam.nl&type=json\n     * - Handle errors if they occur\n     * - Handle successful response by updating the `addresses` in the state using `setAddresses`\n     * - Make sure to add the houseNumber to each found address in the response using `transformAddress()` function\n     * - Bonus: Add a loading state in the UI while fetching addresses\n     */\n  };\n\n  const handlePersonSubmit = (e: any) => {\n    e.preventDefault();\n    if (!fields.selectedAddress || !addresses.length) {\n      setError(\n        \"No address selected, try to select an address or find one if you haven't\"\n      );\n      return;\n    }\n    const foundAddress = addresses.find(\n      (address) => address.id === fields.selectedAddress\n    );\n    addAddress({\n      ...foundAddress,\n      firstName: fields.firstName,\n      lastName: fields.lastName,\n    });\n  };\n\n  return (\n    <main>\n      <Section>\n        <h1>\n          Create your own address book!\n          <br />\n          <small>\n            Enter an address by zipcode add personal info and done! 👏\n          </small>\n        </h1>\n        {/* TODO: Create generic <Form /> component to display form rows, legend and a submit button  */}\n        <Form\n          onSubmit={handleAddressSubmit}\n          legend=\"🏠 Find an address\"\n          submitText=\"Find\"\n        >\n          <FormRow>\n            <InputText\n              name=\"zipCode\"\n              onChange={handleChange}\n              placeholder=\"Zip Code\"\n              value={fields.zipCode}\n            />\n          </FormRow>\n          <FormRow>\n            <InputText\n              name=\"houseNumber\"\n              onChange={handleChange}\n              value={fields.houseNumber}\n              placeholder=\"House number\"\n            />\n          </FormRow>\n        </Form>\n        {/* <form onSubmit={handleAddressSubmit}>\n          <fieldset>\n            <legend>🏠 Find an address</legend>\n            <div className=\"form-row\">\n              <InputText\n                name=\"zipCode\"\n                onChange={handleChange}\n                placeholder=\"Zip Code\"\n                value={fields.zipCode}\n              />\n            </div>\n            <div className=\"form-row\">\n              <InputText\n                name=\"houseNumber\"\n                onChange={handleChange}\n                value={fields.houseNumber}\n                placeholder=\"House number\"\n              />\n            </div>\n            <Button type=\"submit\">Find</Button>\n          </fieldset>\n        </form> */}\n        {addresses.length > 0 &&\n          addresses.map((address) => (\n            <Radio\n              name=\"selectedAddress\"\n              id={address.id}\n              key={address.id}\n              onChange={handleChange}\n            >\n              <Address address={address} />\n            </Radio>\n          ))}\n        {/* TODO: Create generic <Form /> component to display form rows, legend and a submit button  */}\n        {fields.selectedAddress && (\n          <form onSubmit={handlePersonSubmit}>\n            <fieldset>\n              <legend>✏️ Add personal info to address</legend>\n              <div className=\"form-row\">\n                <InputText\n                  name=\"firstName\"\n                  placeholder=\"First name\"\n                  onChange={handleChange}\n                  value={fields.firstName}\n                />\n              </div>\n              <div className=\"form-row\">\n                <InputText\n                  name=\"lastName\"\n                  placeholder=\"Last name\"\n                  onChange={handleChange}\n                  value={fields.lastName}\n                />\n              </div>\n              <Button type=\"submit\">Add to addressbook</Button>\n            </fieldset>\n          </form>\n        )}\n        {/* TODO: Create an <ErrorMessage /> component for displaying an error message */}\n        {error && <ErrorMessage message={error} />}\n      </Section>\n\n      {/* TODO: Add a button to clear all form fields. Button must look different from the default primary button, see design. */}\n      <Section variant=\"dark\">\n        <AddressBook />\n      </Section>\n    </main>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}