{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  addresses: []\n};\nconst addressBookSlice = createSlice({\n  name: \"addressBook\",\n  initialState,\n  reducers: {\n    /** TODO: Prevent duplicate addresses */\n    addAddress(state, action) {\n      state.addresses.push(action.payload);\n    },\n    /** TODO: Write a state update which removes an address from the addresses array. */\n    removeAddress(state, action) {\n      state.addresses = state.addresses.filter(addr => addr.id !== action.payload);\n    },\n    addAddresses(state, action) {\n      state.addresses = action.payload;\n    }\n  }\n});\nexport const {\n  addAddress,\n  removeAddress,\n  addAddresses\n} = addressBookSlice.actions;\nexport default addressBookSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","addresses","addressBookSlice","name","reducers","addAddress","state","action","push","payload","removeAddress","filter","addr","id","addAddresses","actions","reducer"],"sources":["/Users/patrickpicavet/Documents/Coding/fmgroupopdracht/reactTestAddressBook/src/core/reducers/addressBook.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nexport interface AddressBookState {\n  addresses: any[];\n}\n\nconst initialState: AddressBookState = {\n  addresses: [],\n};\n\nconst addressBookSlice = createSlice({\n  name: \"addressBook\",\n  initialState,\n  reducers: {\n    /** TODO: Prevent duplicate addresses */\n    addAddress(state: AddressBookState, action: PayloadAction<any>) {\n      state.addresses.push(action.payload);\n    },\n    /** TODO: Write a state update which removes an address from the addresses array. */\n    removeAddress(state: AddressBookState, action: PayloadAction<any>) {\n      state.addresses = state.addresses.filter(\n        (addr: any) => addr.id !== action.payload\n      );\n    },\n    addAddresses(state: AddressBookState, action: PayloadAction<any[]>) {\n      state.addresses = action.payload;\n    },\n  },\n});\n\nexport const { addAddress, removeAddress, addAddresses } = addressBookSlice.actions;\n\nexport default addressBookSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAM7D,MAAMC,YAA8B,GAAG;EACrCC,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,gBAAgB,GAAGH,WAAW,CAAC;EACnCI,IAAI,EAAE,aAAa;EACnBH,YAAY;EACZI,QAAQ,EAAE;IACR;IACAC,UAAUA,CAACC,KAAuB,EAAEC,MAA0B,EAAE;MAC9DD,KAAK,CAACL,SAAS,CAACO,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACtC,CAAC;IACD;IACAC,aAAaA,CAACJ,KAAuB,EAAEC,MAA0B,EAAE;MACjED,KAAK,CAACL,SAAS,GAAGK,KAAK,CAACL,SAAS,CAACU,MAAM,CACrCC,IAAS,IAAKA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACE,OACpC,CAAC;IACH,CAAC;IACDK,YAAYA,CAACR,KAAuB,EAAEC,MAA4B,EAAE;MAClED,KAAK,CAACL,SAAS,GAAGM,MAAM,CAACE,OAAO;IAClC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ,UAAU;EAAEK,aAAa;EAAEI;AAAa,CAAC,GAAGZ,gBAAgB,CAACa,OAAO;AAEnF,eAAeb,gBAAgB,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}