{"ast":null,"code":"var _jsxFileName = \"/Users/patrickpicavet/Documents/Coding/fmgroupopdracht/reactTestAddressBook/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Address from \"./ui/components/Address/Address\";\nimport AddressBook from \"./ui/components/AddressBook/AddressBook\";\nimport Button from \"./ui/components/Button/Button\";\nimport InputText from \"./ui/components/InputText/InputText\";\nimport Radio from \"./ui/components/Radio/Radio\";\nimport Section from \"./ui/components/Section/Section\";\n// import transformAddress from \"./core/models/address\";\nimport useAddressBook from \"./ui/hooks/useAddressBook\";\nimport \"./App.css\";\nimport useFormFields from \"hooks/useFormFields\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    fields,\n    handleChange,\n    resetFields\n  } = useFormFields({\n    zipCode: \"\",\n    houseNumber: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    selectedAddress: \"\"\n  });\n\n  /**\n   * Form fields states\n   * TODO: Write a custom hook to set form fields in a more generic way:\n   * - Hook must expose an onChange handler to be used by all <InputText /> and <Radio /> components\n   * - Hook must expose all text form field values, like so: { zipCode: '', houseNumber: '', ...etc }\n   * - Remove all individual React.useState\n   * - Remove all individual onChange handlers, like handleZipCodeChange for example\n   */\n\n  const {\n    addAddress\n  } = useAddressBook();\n  const handleAddressSubmit = async e => {\n    e.preventDefault();\n\n    /** TODO: Fetch addresses based on houseNumber and zipCode\n     * - Example URL of API: http://api.postcodedata.nl/v1/postcode/?postcode=1211EP&streetnumber=60&ref=domeinnaam.nl&type=json\n     * - Handle errors if they occur\n     * - Handle successful response by updating the `addresses` in the state using `setAddresses`\n     * - Make sure to add the houseNumber to each found address in the response using `transformAddress()` function\n     * - Bonus: Add a loading state in the UI while fetching addresses\n     */\n  };\n  const handlePersonSubmit = e => {\n    e.preventDefault();\n    if (!selectedAddress || !addresses.length) {\n      setError(\"No address selected, try to select an address or find one if you haven't\");\n      return;\n    }\n    const foundAddress = addresses.find(address => address.id === selectedAddress);\n    addAddress({\n      ...foundAddress,\n      firstName,\n      lastName\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(Section, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Create your own address book!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Enter an address by zipcode add personal info and done! \\uD83D\\uDC4F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddressSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: \"\\uD83C\\uDFE0 Find an address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: /*#__PURE__*/_jsxDEV(InputText, {\n              name: \"zipCode\",\n              onChange: handleZipCodeChange,\n              placeholder: \"Zip Code\",\n              value: zipCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: /*#__PURE__*/_jsxDEV(InputText, {\n              name: \"houseNumber\",\n              onChange: handleHouseNumberChange,\n              value: houseNumber,\n              placeholder: \"House number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Find\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), addresses.length > 0 && addresses.map(address => /*#__PURE__*/_jsxDEV(Radio, {\n        name: \"selectedAddress\",\n        id: address.id,\n        onChange: handleSelectedAddressChange,\n        children: /*#__PURE__*/_jsxDEV(Address, {\n          address: address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this)\n      }, address.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)), selectedAddress && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handlePersonSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: \"\\u270F\\uFE0F Add personal info to address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: /*#__PURE__*/_jsxDEV(InputText, {\n              name: \"firstName\",\n              placeholder: \"First name\",\n              onChange: handleFirstNameChange,\n              value: firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: /*#__PURE__*/_jsxDEV(InputText, {\n              name: \"lastName\",\n              placeholder: \"Last name\",\n              onChange: handleLastNameChange,\n              value: lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Add to addressbook\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      variant: \"dark\",\n      children: /*#__PURE__*/_jsxDEV(AddressBook, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qM8y5FhzOZD7QnibAp2MMHctk1o=\", false, function () {\n  return [useFormFields, useAddressBook];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Address","AddressBook","Button","InputText","Radio","Section","useAddressBook","useFormFields","jsxDEV","_jsxDEV","App","_s","fields","handleChange","resetFields","zipCode","houseNumber","firstName","lastName","selectedAddress","addAddress","handleAddressSubmit","e","preventDefault","handlePersonSubmit","addresses","length","setError","foundAddress","find","address","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","name","onChange","handleZipCodeChange","placeholder","value","handleHouseNumberChange","type","map","handleSelectedAddressChange","handleFirstNameChange","handleLastNameChange","error","variant","_c","$RefreshReg$"],"sources":["/Users/patrickpicavet/Documents/Coding/fmgroupopdracht/reactTestAddressBook/src/App.tsx"],"sourcesContent":["import React from \"react\";\n\nimport Address from \"./ui/components/Address/Address\";\nimport AddressBook from \"./ui/components/AddressBook/AddressBook\";\nimport Button from \"./ui/components/Button/Button\";\nimport InputText from \"./ui/components/InputText/InputText\";\nimport Radio from \"./ui/components/Radio/Radio\";\nimport Section from \"./ui/components/Section/Section\";\n// import transformAddress from \"./core/models/address\";\nimport useAddressBook from \"./ui/hooks/useAddressBook\";\n\nimport \"./App.css\";\nimport useFormFields from \"hooks/useFormFields\";\n\nfunction App() {\n  const { fields, handleChange, resetFields } = useFormFields({\n    zipCode: \"\",\n    houseNumber: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    selectedAddress: \"\",\n  });\n\n  /**\n   * Form fields states\n   * TODO: Write a custom hook to set form fields in a more generic way:\n   * - Hook must expose an onChange handler to be used by all <InputText /> and <Radio /> components\n   * - Hook must expose all text form field values, like so: { zipCode: '', houseNumber: '', ...etc }\n   * - Remove all individual React.useState\n   * - Remove all individual onChange handlers, like handleZipCodeChange for example\n   */\n\n  const { addAddress } = useAddressBook();\n\n  const handleAddressSubmit = async (e: any) => {\n    e.preventDefault();\n\n    /** TODO: Fetch addresses based on houseNumber and zipCode\n     * - Example URL of API: http://api.postcodedata.nl/v1/postcode/?postcode=1211EP&streetnumber=60&ref=domeinnaam.nl&type=json\n     * - Handle errors if they occur\n     * - Handle successful response by updating the `addresses` in the state using `setAddresses`\n     * - Make sure to add the houseNumber to each found address in the response using `transformAddress()` function\n     * - Bonus: Add a loading state in the UI while fetching addresses\n     */\n  };\n\n  const handlePersonSubmit = (e: any) => {\n    e.preventDefault();\n    if (!selectedAddress || !addresses.length) {\n      setError(\n        \"No address selected, try to select an address or find one if you haven't\"\n      );\n      return;\n    }\n    const foundAddress = addresses.find(\n      (address) => address.id === selectedAddress\n    );\n    addAddress({ ...foundAddress, firstName, lastName });\n  };\n\n  return (\n    <main>\n      <Section>\n        <h1>\n          Create your own address book!\n          <br />\n          <small>\n            Enter an address by zipcode add personal info and done! 👏\n          </small>\n        </h1>\n        {/* TODO: Create generic <Form /> component to display form rows, legend and a submit button  */}\n\n        <form onSubmit={handleAddressSubmit}>\n          <fieldset>\n            <legend>🏠 Find an address</legend>\n            <div className=\"form-row\">\n              <InputText\n                name=\"zipCode\"\n                onChange={handleZipCodeChange}\n                placeholder=\"Zip Code\"\n                value={zipCode}\n              />\n            </div>\n            <div className=\"form-row\">\n              <InputText\n                name=\"houseNumber\"\n                onChange={handleHouseNumberChange}\n                value={houseNumber}\n                placeholder=\"House number\"\n              />\n            </div>\n            <Button type=\"submit\">Find</Button>\n          </fieldset>\n        </form>\n        {addresses.length > 0 &&\n          addresses.map((address) => (\n            <Radio\n              name=\"selectedAddress\"\n              id={address.id}\n              key={address.id}\n              onChange={handleSelectedAddressChange}\n            >\n              <Address address={address} />\n            </Radio>\n          ))}\n        {/* TODO: Create generic <Form /> component to display form rows, legend and a submit button  */}\n        {selectedAddress && (\n          <form onSubmit={handlePersonSubmit}>\n            <fieldset>\n              <legend>✏️ Add personal info to address</legend>\n              <div className=\"form-row\">\n                <InputText\n                  name=\"firstName\"\n                  placeholder=\"First name\"\n                  onChange={handleFirstNameChange}\n                  value={firstName}\n                />\n              </div>\n              <div className=\"form-row\">\n                <InputText\n                  name=\"lastName\"\n                  placeholder=\"Last name\"\n                  onChange={handleLastNameChange}\n                  value={lastName}\n                />\n              </div>\n              <Button type=\"submit\">Add to addressbook</Button>\n            </fieldset>\n          </form>\n        )}\n        {/* TODO: Create an <ErrorMessage /> component for displaying an error message */}\n        {error && <div className=\"error\">{error}</div>}\n      </Section>\n\n      {/* TODO: Add a button to clear all form fields. Button must look different from the default primary button, see design. */}\n      <Section variant=\"dark\">\n        <AddressBook />\n      </Section>\n    </main>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}